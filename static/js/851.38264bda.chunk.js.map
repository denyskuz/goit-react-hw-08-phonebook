{"version":3,"file":"static/js/851.38264bda.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","utils/validations.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts/index.js"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","export const validateUsername = value => !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(value) ? 'Please Enter valid name ' : null;\nexport const validateNumber = value => !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/.test(value) ? 'Please Enter valid number ' : null;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__Bl93P\",\"form\":\"ContactForm_form__dhl+T\",\"btn\":\"ContactForm_btn__wll+u\",\"error\":\"ContactForm_error__C1smZ\"};","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { func } from 'prop-types';\nimport { validateUsername, validateNumber } from 'utils';\nimport classes from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactForm = () => {\n    const dispatch = useDispatch()\n    const contacts = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectLoading);\n\n    const handleFormSubmit = async ({ name, number }) => {\n        if (contacts.find(contact => contact.name === name)) {\n            alert(`${name} is already in contacts !!!`);\n            return;\n        }\n        await dispatch(addContact({ name, number }));\n    };\n\nreturn (\n    <Formik\n        initialValues={{\n            name: '',\n            number: ''\n        }}\n        onSubmit={(values, {resetForm }) => {\n            handleFormSubmit(values);\n            resetForm();                \n        }}\n    >\n        {(props) => (\n            <Form className={classes.form}>\n                <Field\n                    className={classes.input}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"John\"\n                    validate={validateUsername}\n                    required\n                />\n                <ErrorMessage name=\"name\" component=\"p\" className={classes.error}/>\n                <Field\n                    className={classes.input}\n                    name=\"number\"\n                    placeholder=\"+380...\"\n                    validate={validateNumber}\n                    required\n            \n                />\n                <ErrorMessage name=\"number\" component=\"p\" className={classes.error} />\n                <button\n                    className={classes.btn}\n                    type=\"submit\"\n                >\n                    { isLoading ?\n                        <svg version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" >\n                            <path fill=\"#fff\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n                            <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" dur=\"1s\" from=\"0 50 50\" to=\"360 50 50\" repeatCount=\"indefinite\"></animateTransform>\n                            </path>\n                        </svg> : 'Submit'\n                    }\n                </button>\n            </Form>\n        )}\n    </Formik>\n)\n\n}\nContactForm.propsTypes = {\n    onSubmit: func.isRequired\n}\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactList_items__1HfWM\",\"item\":\"ContactList_item__EZYHO\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\"};","import React from 'react'\nimport { arrayOf, shape, string, number, func } from 'prop-types';\nimport classes from './ContactList.module.css';\nimport { removeContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectFilter, selectLoading } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactList = () => {\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter);\n    const contacts = useSelector(selectAllContacts);\n    const filterContacts = contacts && contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    const isLoading = useSelector(selectLoading);\n\n    return (\n        <>\n         { isLoading &&\n           <div className={classes.loader}>\n              <svg version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" >\n                <path fill=\"#000\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n                  <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" dur=\"1s\" from=\"0 50 50\" to=\"360 50 50\" repeatCount=\"indefinite\"></animateTransform>\n                </path>\n              </svg>\n          </div>\n        }\n        {!isLoading && <ul className={classes.items}>\n            {filterContacts && filterContacts.map(({ name, number, id }) => (\n                <li\n                    key={id}\n                    className={classes.item}\n                >\n                    {`${name}: ${number}`}\n                    <button\n                        className={classes.deleteBtn}\n                        type=\"button\"\n                        onClick={() => dispatch(removeContact(id))}\n                        title=\"Delete\"\n                    >\n                        &#10006;\n                    </button>\n                </li>\n            ))}\n        </ul>\n        }\n        </>\n    )\n}\nContactList.propsTypes = {\n    contacts: arrayOf(shape({\n        id: string.isRequired,\n        name: string.isRequired,\n        number: number.isRequired\n    })).isRequired,\n    onDelete: func.isRequired\n}\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react'\nimport { func } from 'prop-types';\nimport classes from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const setFilterValue = e => {\n        dispatch(setFilter(e.currentTarget.value.toUpperCase()));\n    };\n    return (\n        <div className={classes.container}>\n            <p  className={classes.title }>Filter contact</p>\n            <input\n                className={classes.input}\n                name=\"search\"\n                placeholder=\"Search ...\"\n                onChange={setFilterValue}\n            />\n        </div>\n    )\n    \n}\nFilter.propsTypes = {\n    onHandleFilter: func.isRequired\n}\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <>\n       <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","validateUsername","value","test","validateNumber","ContactForm","dispatch","useDispatch","useSelector","isLoading","handleFormSubmit","name","number","find","contact","alert","addContact","initialValues","onSubmit","values","resetForm","props","className","classes","type","placeholder","validate","required","component","version","id","xmlns","x","y","viewBox","fill","d","attributeName","attributeType","dur","from","to","repeatCount","propsTypes","func","ContactList","filterContacts","toLowerCase","includes","map","onClick","removeContact","title","arrayOf","shape","string","isRequired","onDelete","Filter","onChange","e","setFilter","currentTarget","toUpperCase","onHandleFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}